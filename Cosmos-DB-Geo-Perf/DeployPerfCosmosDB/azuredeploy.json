{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "Cosmos DB Account Name": {
      "type": "String"
    },
    "Partition Count": {
      "type": "int",
      "defaultValue": 4000
    },
    "Records per partition": {
      "type": "int",
      "defaultValue": 300
    },
    "Geo Ratio": {
      "type": "string",
      "defaultValue": "0.33"
    }
  },
  "variables": {
    "connectionName": "CosmosDB-Connection"
  },
  "resources": [
    {
      "apiVersion": "2015-04-08",
      "type": "Microsoft.DocumentDB/databaseAccounts",
      "name": "[parameters('Cosmos DB Account Name')]",
      "kind": "GlobalDocumentDB",
      "location": "[resourceGroup().location]",
      "tags": {
        "defaultExperience": "DocumentDB"
      },
      "scale": null,
      "properties": {
        "databaseAccountOfferType": "Standard",
        "consistencyPolicy": {
          "defaultConsistencyLevel": "Session",
          "maxIntervalInSeconds": 5,
          "maxStalenessPrefix": 100
        },
        "name": "othernamevpl"
      },
      "dependsOn": []
    },
    {
      "apiVersion": "2016-06-01",
      "type": "Microsoft.Web/connections",
      "name": "[variables('connectionName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "displayName": "[concat('Connection to Cosmos DB account \"', parameters('Cosmos DB Account Name'), '\"')]",
        "api": {
          "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/documentdb')]"
        },
        "parameterValues": {
          "databaseAccount": "[parameters('Cosmos DB Account Name')]",
          "accessKey": "[listKeys(resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('Cosmos DB Account Name')), '2015-04-08').primaryMasterKey]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('Cosmos DB Account Name'))]"
      ]
    },
    {
      "apiVersion": "2016-06-01",
      "type": "Microsoft.Logic/workflows",
      "name": "RandomLoadCollectionApp",
      "location": "[resourceGroup().location]",
      "properties": {
        "state": "Enabled",
        "parameters": {
          "$connections": {
            "value": {
              "documentdb": {
                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/', 'documentdb')]",
                "connectionId": "[resourceId('Microsoft.Web/connections', variables('connectionName'))]",
                "connectionName": "[variables('connectionName')]"
              }
            }
          },
          "$partitionCount": {
            "value": "[parameters('Partition Count')]"
          },
          "$recordsPerPartition": {
            "value": "[parameters('Records per partition')]"
          },
          "$geoRatio": {
            "value": "[parameters('Geo Ratio')]"
          }
        },
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "actions": {
            "For_each": {
              "type": "Foreach",
              "foreach": "@range(0, parameters('$partitionCount'))",
              "actions": {
                "Execute_stored_procedure": {
                  "type": "ApiConnection",
                  "inputs": {
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['documentdb']['connectionId']"
                      }
                    },
                    "method": "post",
                    "path": "/dbs/@{encodeURIComponent('mydb')}/colls/@{encodeURIComponent('mycoll')}/sprocs/@{encodeURIComponent('createRecords')}",
                    "headers": {
                      "x-ms-documentdb-partitionkey": "@{outputs('GeneratePartition')}"
                    },
                    "body": "@concat('[\"', outputs('GeneratePartition'), '\", ', parameters('$recordsPerPartition'), ', ', parameters('$geoRatio'), ']')"
                  },
                  "runAfter": {
                    "GeneratePartition": [
                      "Succeeded"
                    ]
                  }
                },
                "GeneratePartition": {
                  "type": "Compose",
                  "inputs": "@rand(0,parameters('$partitionCount'))",
                  "runAfter": {}
                }
              },
              "runAfter": {}
            }
          },
          "parameters": {
            "$connections": {
              "defaultValue": {},
              "type": "Object"
            },
            "$partitionCount": {
              "defaultValue": {},
              "type": "int"
            },
            "$recordsPerPartition": {
              "defaultValue": {},
              "type": "int"
            },
            "$geoRatio": {
              "defaultValue": {},
              "type": "string"
            }
          },
          "triggers": {
            "manual": {
              "type": "Request",
              "kind": "Http",
              "inputs": {
                "schema": {}
              }
            }
          },
          "contentVersion": "1.0.0.0",
          "outputs": {}
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/connections', variables('connectionName'))]"
      ]
    }
  ],
  "outputs": {}
}